apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion compile_sdk
    buildToolsVersion build_tools

    defaultConfig {
        minSdkVersion minimum_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_readable

        resValue "string", "provider_google_fused", "com.aware.plugin.google.fused_location.provider.geofences"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            java.srcDirs += '../com.aware.plugin.google.fused_location/src/main/java'
            res.srcDirs += '../com.aware.plugin.google.fused_location/src/main/res'
            manifest.srcFile '../com.aware.plugin.google.fused_location/src/main/AndroidManifest.xml'
        }
    }
}

if (System.getenv("storeFile") != null && System.getenv("storePassword") != null && System.getenv("keyAlias") != null && System.getenv("keyPassword") != null) {
    android.signingConfigs.release.storeFile = file(System.getenv("storeFile"))
    android.signingConfigs.release.storePassword = System.getenv("storePassword")
    android.signingConfigs.release.keyAlias = System.getenv("keyAlias")
    android.signingConfigs.release.keyPassword = System.getenv("keyPassword")
} else {
    println("No keystore defined. Unsigned!")
    android.buildTypes.release.signingConfig = null
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    maven { url "https://jitpack.io" } //MPAndroidChart, AWARE
}

dependencies {
    api "com.github.denzilferreira:aware-client:$aware_libs"
    implementation "com.google.android.gms:play-services-location:$google_libs"
    implementation "com.google.android.gms:play-services-maps:$google_libs"
    implementation "com.android.support:design:$support_libs"
}